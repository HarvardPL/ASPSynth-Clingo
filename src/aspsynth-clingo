#!/usr/bin/env python3

# Copyright 2023 President and Fellows of Harvard College
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
import subprocess
import translate2asp

def solve(encoding, parallelism, stats):
    clingo_cmd = ["clingo", "-t", str(parallelism)]
    if stats:
        clingo_cmd.extend(["--stats", "1"])
    clingo = subprocess.Popen(clingo_cmd, stdin=subprocess.PIPE,
            stdout=subprocess.PIPE, text=True)
    return clingo.communicate(input=encoding)[0]


def solve_pipe(encoding, parallelism, stats):
    gringo_cmd = ["gringo", "-o", "smodels"]
    gringo = subprocess.Popen(gringo_cmd, stdin=subprocess.PIPE,
            stdout=subprocess.PIPE, text=True)
    out, err = gringo.communicate(input=encoding)
    clasp_cmd = ["clasp", "-t", str(parallelism)]
    if stats:
        clasp_cmd.extend(["--stats", "1"])
    clasp = subprocess.Popen(clasp_cmd, stdin=subprocess.PIPE,
            stdout=subprocess.PIPE, text=True)
    return clasp.communicate(input=str(out))[0]


def main():
    parser = argparse.ArgumentParser(
            formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument("dir", help="Benchmark directory")
    parser.add_argument("--minimize", choices=["rules", "premises", "none"],
            default="none", help="Minimalization criterion")
    parser.add_argument("--stats", action="store_true",
            help="Print stats (does not work with minimization)")
    parser.add_argument("--parallelism", type=int, default=4,
            help="Number of Clingo threads")
    parser.add_argument("--pipe", action="store_true",
            help="Call Gringo and Clasp as separate processes")
    args = parser.parse_args()

    lines = translate2asp.translate(args.dir, args.minimize)
    encoding = "\n".join(lines)
    print("*** Clingo program ***")
    print(encoding)
    print("*** Clingo output ***")
    if args.pipe:
        r = solve_pipe(encoding, args.parallelism, args.stats)
    else:
        r = solve(encoding, args.parallelism, args.stats)
    print(r)


if __name__ == "__main__":
    main()
